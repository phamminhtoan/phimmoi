{"ast":null,"code":"var _jsxFileName = \"/Users/toanpham/Downloads/Project React/MoiveApp/src/components/elements/MovieThumb/MovieThumb.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './MovieThumb.css';\n\nconst MovieThumb = ({\n  image,\n  movieId,\n  movieName,\n  clickable\n}) => React.createElement(\"div\", {\n  className: \"rmdb-moviethumb\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, clickable ? React.createElement(Link, {\n  to: {\n    pathname: \"/\".concat(movieId),\n    movieName: \"\".concat(movieName)\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  className: \"clickable\",\n  src: image,\n  alt: \"moviethumb\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n})) : React.createElement(\"img\", {\n  src: image,\n  alt: \"moviethumb\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}));\n\nMovieThumb.propTypes = {\n  image: PropTypes.string,\n  movieId: PropTypes.number,\n  movieName: PropTypes.string,\n  clickable: PropTypes.bool\n};\nexport default MovieThumb;","map":{"version":3,"sources":["/Users/toanpham/Downloads/Project React/MoiveApp/src/components/elements/MovieThumb/MovieThumb.js"],"names":["React","Link","PropTypes","MovieThumb","image","movieId","movieName","clickable","pathname","propTypes","string","number","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,kBAAP;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,OAAT;AAAkBC,EAAAA,SAAlB;AAA6BC,EAAAA;AAA7B,CAAD,KACjB;AAAK,EAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEGA,SAAS,GACR,oBAAC,IAAD;AAAM,EAAA,EAAE,EAAE;AAAEC,IAAAA,QAAQ,aAAMH,OAAN,CAAV;AAA4BC,IAAAA,SAAS,YAAKA,SAAL;AAArC,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,WAAf;AAA2B,EAAA,GAAG,EAAEF,KAAhC;AAAuC,EAAA,GAAG,EAAC,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADQ,GAKR;AAAK,EAAA,GAAG,EAAEA,KAAV;AAAiB,EAAA,GAAG,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAPJ,CADF;;AAaAD,UAAU,CAACM,SAAX,GAAuB;AACrBL,EAAAA,KAAK,EAAEF,SAAS,CAACQ,MADI;AAErBL,EAAAA,OAAO,EAAEH,SAAS,CAACS,MAFE;AAGrBL,EAAAA,SAAS,EAAEJ,SAAS,CAACQ,MAHA;AAIrBH,EAAAA,SAAS,EAAEL,SAAS,CAACU;AAJA,CAAvB;AAOA,eAAeT,UAAf","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './MovieThumb.css';\n\nconst MovieThumb = ({ image, movieId, movieName, clickable }) => (\n  <div className=\"rmdb-moviethumb\">\n    {/* You can send props via the Links \"to\" object. Here we create our own \"movieName\" */}\n    {clickable ?\n      <Link to={{ pathname: `/${movieId}`,  movieName: `${movieName}`}}>\n        <img className=\"clickable\" src={image} alt=\"moviethumb\" />\n      </Link>\n      :\n      <img src={image} alt=\"moviethumb\" />\n    }\n  </div>\n)\n\nMovieThumb.propTypes = {\n  image: PropTypes.string,\n  movieId: PropTypes.number,\n  movieName: PropTypes.string,\n  clickable: PropTypes.bool\n}\n\nexport default MovieThumb;"]},"metadata":{},"sourceType":"module"}